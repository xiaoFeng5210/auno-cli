{"version":3,"sources":["../auno.ts","../src/createIndexFile.ts","../src/config/createTsconfig.ts","../src/config/createPackage.ts","../src/config/createTsup.ts"],"sourcesContent":["import fs from 'node:fs'\nimport { createIndexFile, createTsconfig, createPackageFile, createTSup } from './src'\n\nasync function main() {\n  \n}\n\nexport async function createNodeProject(dir: string) {\n  const rootDir = dir ? dir : getTemplateDir()\n  if (fs.existsSync(rootDir)) {\n    // 删除文件夹\n    fs.rmSync(rootDir, { recursive: true, force: true });\n    console.log('The directory already delete')\n  }\n  fs.mkdirSync(rootDir)\n  fs.mkdirSync(`${rootDir}/src`)\n  fs.mkdirSync(`${rootDir}/assets`)\n  await createBase(rootDir)\n}\n\nasync function createBase(dir: string) {\n  await createIndexFile(dir)\n  await createTsconfig(dir)\n  await createPackageFile(dir)\n  createTSup(dir)\n}\n\nfunction getTemplateDir() {\n  return 'auno-cli'\n}\n","import fs from 'node:fs/promises'\n\nexport async function createIndexFile(dir: string) {\n  const fileContetnt = `// Welcome to auno\nmain()\n\nfunction main() {\n\n}`\n  await fs.writeFile(`${dir}/index.ts`, fileContetnt)\n}\n","/**\n * 创建 tsconfig.json\n */\nimport fs from 'node:fs/promises'\n\nexport async function createTsconfig(rootDir: string) {\n  const content = `{\n    \"compilerOptions\": {\n      \"outDir\": \"dist\",\n      \"target\": \"ESNext\" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,\n      \"module\": \"esnext\" /* Specify what module code is generated. */,\n      \"esModuleInterop\": true,\n      \"moduleResolution\": \"Node\",\n    }\n  }`\n  const res = await fs.writeFile(`${rootDir}/tsconfig.json`, content)\n  console.log(res)\n}\n","import fs from 'node:fs/promises'\nimport { lintCode } from '../utils/lint'\n\nexport async function createPackageFile(rootDir: string) {\n  const content = `\n{\n      \"name\": \"${rootDir}\",\n      \"version\": \"0.0.1\",\n      \"description\": \"\",\n      \"main\": \"dist/index.js\",\n      \"type\": \"module\",\n      \"scripts\": {\n        \"dev\": \"tsup --format esm --watch\",\n        \"build\": \"tsup --format esm && tsup --dts\",\n        \"dts\": \"tsup --dts\"\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"@types/node\": \"^20.11.10\",\n        \"tsup\": \"^8.0.1\",\n        \"typescript\": \"^5.3.3\"\n      }\n}`;\n  const lintCode = JSON.stringify(content.trim(), null, 4)\n  await fs.writeFile(`${rootDir}/package.json`, content.trim())\n}\n","import { writeFileSync } from 'fs'\nexport function createTSup(rootDir: string) {\n  const content = `\nimport { defineConfig } from 'tsup' // 使用 defineConfig 有类型提示！\n\nexport default defineConfig({\n  entry: ['index.ts'],\n  splitting: false,\n  sourcemap: true,\n  clean: true,\n})  \n  `\n  writeFileSync(`${rootDir}/tsup.config.ts`, content.trim())\n  \n}\n"],"mappings":";AAAA,OAAOA,SAAQ;;;ACAf,OAAO,QAAQ;AAEf,eAAsB,gBAAgB,KAAa;AACjD,QAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrB,QAAM,GAAG,UAAU,GAAG,GAAG,aAAa,YAAY;AACpD;;;ACPA,OAAOC,SAAQ;AAEf,eAAsB,eAAe,SAAiB;AACpD,QAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAShB,QAAM,MAAM,MAAMA,IAAG,UAAU,GAAG,OAAO,kBAAkB,OAAO;AAClE,UAAQ,IAAI,GAAG;AACjB;;;ACjBA,OAAOC,SAAQ;AAGf,eAAsB,kBAAkB,SAAiB;AACvD,QAAM,UAAU;AAAA;AAAA,iBAED,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBtB,QAAM,WAAW,KAAK,UAAU,QAAQ,KAAK,GAAG,MAAM,CAAC;AACvD,QAAMA,IAAG,UAAU,GAAG,OAAO,iBAAiB,QAAQ,KAAK,CAAC;AAC9D;;;AC3BA,SAAS,qBAAqB;AACvB,SAAS,WAAW,SAAiB;AAC1C,QAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhB,gBAAc,GAAG,OAAO,mBAAmB,QAAQ,KAAK,CAAC;AAE3D;;;AJPA,eAAsB,kBAAkB,KAAa;AACnD,QAAM,UAAU,MAAM,MAAM,eAAe;AAC3C,MAAIC,IAAG,WAAW,OAAO,GAAG;AAE1B,IAAAA,IAAG,OAAO,SAAS,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AACnD,YAAQ,IAAI,8BAA8B;AAAA,EAC5C;AACA,EAAAA,IAAG,UAAU,OAAO;AACpB,EAAAA,IAAG,UAAU,GAAG,OAAO,MAAM;AAC7B,EAAAA,IAAG,UAAU,GAAG,OAAO,SAAS;AAChC,QAAM,WAAW,OAAO;AAC1B;AAEA,eAAe,WAAW,KAAa;AACrC,QAAM,gBAAgB,GAAG;AACzB,QAAM,eAAe,GAAG;AACxB,QAAM,kBAAkB,GAAG;AAC3B,aAAW,GAAG;AAChB;AAEA,SAAS,iBAAiB;AACxB,SAAO;AACT;","names":["fs","fs","fs","fs"]}