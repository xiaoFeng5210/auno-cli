{"version":3,"sources":["../auno.ts","../src/createIndexFile.ts","../src/config/createTsconfig.ts","../src/config/createPackage.ts","../src/config/createTsup.ts","../src/utils/renderTemplate.ts"],"sourcesContent":["import fs from 'node:fs'\nimport { createIndexFile, createTsconfig, createPackageFile, createTSup } from './src'\nimport { exec, execFile, spawn } from 'node:child_process';\nimport path, { dirname } from 'node:path';\nimport { renderTemplate } from './src/utils/renderTemplate'\n\nasync function main() {\n  renderTemplate('ts-node', 'test-render')\n}\n\nmain()\n\nexport async function createNodeProject(dir: string) {\n  const rootDir = dir ? dir : getTemplateDir()\n  if (fs.existsSync(rootDir)) {\n    // 删除文件夹\n    fs.rmSync(rootDir, { recursive: true, force: true });\n  }\n  fs.mkdirSync(rootDir)\n  fs.mkdirSync(`${rootDir}/src`)\n  fs.mkdirSync(`${rootDir}/assets`)\n  await createBase(rootDir)\n}\n\nasync function createBase(dir: string) {\n  await createIndexFile(dir)\n  await createTsconfig(dir)\n  await createPackageFile(dir)\n  createTSup(dir)\n}\n\nfunction getTemplateDir() {\n  return 'auno-cli'\n}\n","import fs from 'node:fs/promises'\n\nexport async function createIndexFile(dir: string) {\n  const fileContetnt = `// Welcome to auno\nmain()\n\nfunction main() {\n\n}`\n  await fs.writeFile(`${dir}/index.ts`, fileContetnt)\n}\n","/**\n * 创建 tsconfig.json\n */\nimport fs from 'node:fs/promises'\n\nexport async function createTsconfig(rootDir: string) {\n  const content = `{\n    \"compilerOptions\": {\n      \"outDir\": \"dist\",\n      \"target\": \"ESNext\" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,\n      \"module\": \"esnext\" /* Specify what module code is generated. */,\n      \"esModuleInterop\": true,\n      \"moduleResolution\": \"Node\",\n    }\n  }`\n  const res = await fs.writeFile(`${rootDir}/tsconfig.json`, content)\n  console.log(res)\n}\n","import fs from 'node:fs/promises'\nimport { lintCode } from '../utils/lint'\n\nexport async function createPackageFile(rootDir: string) {\n  const content = `\n{\n      \"name\": \"${rootDir}\",\n      \"version\": \"0.0.1\",\n      \"description\": \"\",\n      \"main\": \"dist/index.js\",\n      \"type\": \"module\",\n      \"scripts\": {\n        \"start\": \"nodemon --delay 1000ms dist/index.js\",\n        \"tsup-watch\": \"tsup --format esm --watch\",\n        \"build\": \"tsup --format esm && tsup --dts --format esm\",\n        \"dts\": \"tsup --dts --format esm\",\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"@types/node\": \"^20.11.10\",\n        \"nodemon\": \"^3.0.3\",\n        \"tsup\": \"^8.0.1\",\n        \"typescript\": \"^5.3.3\"\n      }\n}`;\n  const lintCode = JSON.stringify(content.trim(), null, 4)\n  await fs.writeFile(`${rootDir}/package.json`, content.trim())\n}\n","import { writeFileSync } from 'fs'\nexport function createTSup(rootDir: string) {\n  const content = `\nimport { defineConfig } from 'tsup' // 使用 defineConfig 有类型提示！\n\nexport default defineConfig({\n  entry: ['index.ts'],\n  splitting: false,\n  sourcemap: true,\n  clean: true,\n})  \n  `\n  writeFileSync(`${rootDir}/tsup.config.ts`, content.trim())\n  \n}\n","import fs from 'node:fs'\nimport path, { dirname } from 'node:path';\n\nexport async function renderTemplate(templateRoot: string, target?: string) {\n  const cwd = process.cwd()\n  const dirPathPrefix = path.resolve(cwd, 'src/template')\n  const dirPath = path.join(dirPathPrefix, templateRoot)\n  fs.readdir(dirPath, { withFileTypes: true }, (err, files) => {\n    readRootAndCopy(files, target)\n  })\n}\n\n\nfunction readRootAndCopy(files: fs.Dirent[], target: string) {\n  if (fs.existsSync(target)) {\n    // 删除文件夹\n    fs.rmSync(target, { recursive: true, force: true });\n  }\n  fs.mkdirSync(target)\n  const targetRealPath = path.resolve(process.cwd(), target)\n  // 列出根目录所有\n  for (let f of files) {\n    if (f.name !== 'node_modules') {\n      if (f.isDirectory()) {\n        fs.mkdirSync(path.join(targetRealPath, f.name))\n        recursionDir(f.name, f.path, targetRealPath)\n      }\n      else {\n        copyFileToDest(f.name, f.path, targetRealPath)\n      }\n    }\n  }\n}\n\nfunction recursionDir(dirName: string, dirPath: string, parentPath: string) {\n  const needCopyDirPath = path.join(dirPath, dirName);\n  const destPath = path.join(parentPath, dirName)\n  const child = fs.readdirSync(needCopyDirPath, { withFileTypes: true })\n  if (Array.isArray(child) && child.length > 0) {\n    loopFileAndCopyToDest(child, needCopyDirPath, destPath)\n  }\n}\n\nfunction loopFileAndCopyToDest(child: fs.Dirent[], needCopyDirPath: string, destPath: string) {\n  for (let c of child) {\n    if (c.isDirectory()) {\n      // 在目标文件夹创建同名文件夹\n      fs.mkdirSync(destPath)\n      recursionDir(c.name, needCopyDirPath, destPath)\n    }\n    else {\n      copyFileToDest(c.name, needCopyDirPath, destPath)\n    }\n  }\n}\n\nfunction copyFileToDest(copyName: string, copyPath: string, targetPath: string) {\n  const filePath = path.join(copyPath, copyName)\n  const destPath = path.join(targetPath, copyName)\n  fs.copyFileSync(filePath, destPath)\n}\n"],"mappings":"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","names":["fs","fs","fs","fs","fs"]}