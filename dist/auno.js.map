{"version":3,"sources":["../src/lib/renderTemplate.ts","../auno.ts"],"sourcesContent":["import fs from 'node:fs'\nimport path, { dirname } from 'node:path';\n\nexport type TemplateRoot = 'ts-node' \n\nexport async function renderTemplate(templateRoot: TemplateRoot, target?: string) {\n  const cwd = process.cwd()\n  const dirPathPrefix = path.resolve(cwd, 'src/template')\n  const dirPath = path.join(dirPathPrefix, templateRoot)\n  fs.readdir(dirPath, { withFileTypes: true }, (err, files) => {\n    readRootAndCopy(files, target)\n  })\n}\n\n\nfunction readRootAndCopy(files: fs.Dirent[], target: string) {\n  if (fs.existsSync(target)) {\n    // 删除文件夹\n    fs.rmSync(target, { recursive: true, force: true });\n  }\n  fs.mkdirSync(target)\n  const targetRealPath = path.resolve(process.cwd(), target)\n  // 列出根目录所有\n  for (let f of files) {\n    if (f.name !== 'node_modules') {\n      if (f.isDirectory()) {\n        fs.mkdirSync(path.join(targetRealPath, f.name))\n        recursionDir(f.name, f.path, targetRealPath)\n      }\n      else {\n        copyFileToDest(f.name, f.path, targetRealPath)\n      }\n    }\n  }\n}\n\nfunction recursionDir(dirName: string, dirPath: string, parentPath: string) {\n  const needCopyDirPath = path.join(dirPath, dirName);\n  const destPath = path.join(parentPath, dirName)\n  const child = fs.readdirSync(needCopyDirPath, { withFileTypes: true })\n  if (Array.isArray(child) && child.length > 0) {\n    loopFileAndCopyToDest(child, needCopyDirPath, destPath)\n  }\n}\n\nfunction loopFileAndCopyToDest(child: fs.Dirent[], needCopyDirPath: string, destPath: string) {\n  for (let c of child) {\n    if (c.isDirectory()) {\n      // 在目标文件夹创建同名文件夹\n      fs.mkdirSync(path.join(destPath, c.name))\n      recursionDir(c.name, needCopyDirPath, destPath)\n    }\n    else {\n      copyFileToDest(c.name, needCopyDirPath, destPath)\n    }\n  }\n}\n\nfunction copyFileToDest(copyName: string, copyPath: string, targetPath: string) {\n  const filePath = path.join(copyPath, copyName)\n  const destPath = path.join(targetPath, copyName)\n  fs.copyFileSync(filePath, destPath)\n}\n","import { renderTemplate } from './src/lib/renderTemplate'\n\n/**\n * 命令行的相关逻辑可以通过这里进行测试\n */\nasync function main() {\n  renderTemplate('ts-node', 'playground')\n}\n\nmain()\n"],"mappings":";AAAA,OAAO,QAAQ;AACf,OAAO,UAAuB;AAI9B,eAAsB,eAAe,cAA4B,QAAiB;AAChF,QAAM,MAAM,QAAQ,IAAI;AACxB,QAAM,gBAAgB,KAAK,QAAQ,KAAK,cAAc;AACtD,QAAM,UAAU,KAAK,KAAK,eAAe,YAAY;AACrD,KAAG,QAAQ,SAAS,EAAE,eAAe,KAAK,GAAG,CAAC,KAAK,UAAU;AAC3D,oBAAgB,OAAO,MAAM;AAAA,EAC/B,CAAC;AACH;AAGA,SAAS,gBAAgB,OAAoB,QAAgB;AAC3D,MAAI,GAAG,WAAW,MAAM,GAAG;AAEzB,OAAG,OAAO,QAAQ,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAAA,EACpD;AACA,KAAG,UAAU,MAAM;AACnB,QAAM,iBAAiB,KAAK,QAAQ,QAAQ,IAAI,GAAG,MAAM;AAEzD,WAAS,KAAK,OAAO;AACnB,QAAI,EAAE,SAAS,gBAAgB;AAC7B,UAAI,EAAE,YAAY,GAAG;AACnB,WAAG,UAAU,KAAK,KAAK,gBAAgB,EAAE,IAAI,CAAC;AAC9C,qBAAa,EAAE,MAAM,EAAE,MAAM,cAAc;AAAA,MAC7C,OACK;AACH,uBAAe,EAAE,MAAM,EAAE,MAAM,cAAc;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,aAAa,SAAiB,SAAiB,YAAoB;AAC1E,QAAM,kBAAkB,KAAK,KAAK,SAAS,OAAO;AAClD,QAAM,WAAW,KAAK,KAAK,YAAY,OAAO;AAC9C,QAAM,QAAQ,GAAG,YAAY,iBAAiB,EAAE,eAAe,KAAK,CAAC;AACrE,MAAI,MAAM,QAAQ,KAAK,KAAK,MAAM,SAAS,GAAG;AAC5C,0BAAsB,OAAO,iBAAiB,QAAQ;AAAA,EACxD;AACF;AAEA,SAAS,sBAAsB,OAAoB,iBAAyB,UAAkB;AAC5F,WAAS,KAAK,OAAO;AACnB,QAAI,EAAE,YAAY,GAAG;AAEnB,SAAG,UAAU,KAAK,KAAK,UAAU,EAAE,IAAI,CAAC;AACxC,mBAAa,EAAE,MAAM,iBAAiB,QAAQ;AAAA,IAChD,OACK;AACH,qBAAe,EAAE,MAAM,iBAAiB,QAAQ;AAAA,IAClD;AAAA,EACF;AACF;AAEA,SAAS,eAAe,UAAkB,UAAkB,YAAoB;AAC9E,QAAM,WAAW,KAAK,KAAK,UAAU,QAAQ;AAC7C,QAAM,WAAW,KAAK,KAAK,YAAY,QAAQ;AAC/C,KAAG,aAAa,UAAU,QAAQ;AACpC;;;ACzDA,eAAe,OAAO;AACpB,iBAAe,WAAW,YAAY;AACxC;AAEA,KAAK;","names":[]}