{"version":3,"sources":["../package.json","../cli.ts","../auno.ts","../src/createIndexFile.ts","../src/config/createTsconfig.ts","../src/config/createPackage.ts","../src/config/createTsup.ts"],"sourcesContent":["{\n  \"name\": \"auno-cli\",\n  \"version\": \"0.0.2\",\n  \"description\": \"编写一个可以执行ts文件的node cli工具，使用tsup打包。方便用户快速创建一个ts node项目\",\n  \"main\": \"dist/cli.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"nodemon --delay 1000ms dist/auno.js\",\n    \"local\": \"auno-cli create local\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"watch\": \"tsup --format esm --watch\",\n    \"build\": \"tsup --format esm && tsup --dts --format esm\",\n    \"dts\": \"tsup --dts --format esm\",\n    \"lint\": \"eslint --ext .ts src\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/xiaoFeng5210/typescript-node-cli.git\"\n  },\n  \"keywords\": [\n    \"tsup\", \"typescript\", \"node\", \"cli\", \"nodemon\", \"build\", \"cac\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/xiaoFeng5210/typescript-node-cli/issues\"\n  },\n  \"homepage\": \"https://github.com/xiaoFeng5210/typescript-node-cli#readme\",\n  \"devDependencies\": {\n    \"@types/eslint\": \"^8.56.2\",\n    \"@types/node\": \"^20.11.10\",\n    \"eslint\": \"^8.56.0\",\n    \"nodemon\": \"^3.0.3\",\n    \"tsup\": \"^8.0.1\",\n    \"typescript\": \"^5.3.3\"\n  },\n  \"dependencies\": {\n    \"cac\": \"^6.7.14\",\n    \"fastify\": \"^4.26.0\"\n  },\n  \"bin\": {\n    \"auno-cli\": \"bin/auno.js\"\n  }\n}\n","import cac from \"cac\";\nimport path from \"node:path\"\nimport { createNodeProject } from './auno'\n\nconst version = require('./package.json').version\n\nconst cli = cac('auno').version(version).help()\n\ncli.command('create <project>', 'start create new project')\n  .option('--template <template>', 'choose a template', { default: 'node' })\n  .action((project, options) => {  // 第一个参数project - 项目名称，第二个参数options - 选项\n    if (options.template === 'node') {\n      if (project) {\n        createNodeProject(project)\n      }\n    }\n  })\n\ncli.parse()\n","import fs from 'node:fs'\nimport { createIndexFile, createTsconfig, createPackageFile, createTSup } from './src'\nimport { exec, execFile, spawn } from 'node:child_process';\nimport path, { dirname } from 'node:path';\n\nasync function main() {\n  renderTemplate('ts-node', 'test-render')\n}\n\nmain()\n\nexport async function renderTemplate(templateRoot: string, target?: string) {\n  const cwd = process.cwd()\n  const dirPathPrefix = path.resolve(cwd, 'src/template')\n  const dirPath = path.join(dirPathPrefix, templateRoot)\n  fs.readdir(dirPath, { withFileTypes: true }, (err, files) => {\n    readRootAndCopy(files, target)\n  })\n}\n\nfunction readRootAndCopy(files: fs.Dirent[], target: string) {\n  if (fs.existsSync(target)) {\n    // 删除文件夹\n    fs.rmSync(target, { recursive: true, force: true });\n  }\n  fs.mkdirSync(target)\n  const targetRealPath = path.resolve(process.cwd(), target)\n  // 列出根目录所有\n  for (let f of files) {\n    if (f.name !== 'node_modules') {\n      if (f.isDirectory()) {\n        fs.mkdirSync(path.join(targetRealPath, f.name))\n        recursionDir(f.name, f.path, targetRealPath)\n      }\n      else {\n        const filePath = path.join(f.path, f.name)\n        const destPath = path.join(targetRealPath, f.name)\n        fs.copyFileSync(filePath, destPath)\n      }\n    }\n  }\n}\n\nfunction recursionDir(dirName: string, dirPath: string, targetRealPath: string) {\n  const currentDirPath = path.join(dirPath, dirName);\n  const child = fs.readdirSync(currentDirPath, { withFileTypes: true })\n  if (Array.isArray(child) && child.length > 0) {\n    for (let c of child) {\n      if (c.isDirectory()) {\n        // 在目标文件夹创建同名文件夹\n        fs.mkdirSync(path.join(targetRealPath, c.name))\n        recursionDir(c.name, currentDirPath, path.join(targetRealPath, c.name))\n      }\n      else {\n        console.log(targetRealPath)\n        const filePath = path.join(c.path, c.name)\n        const destPath = path.join(targetRealPath, c.name)\n        \n        fs.copyFileSync(filePath, destPath)\n      }\n    }\n  }\n}\n\nexport async function createNodeProject(dir: string) {\n  const rootDir = dir ? dir : getTemplateDir()\n  if (fs.existsSync(rootDir)) {\n    // 删除文件夹\n    fs.rmSync(rootDir, { recursive: true, force: true });\n  }\n  fs.mkdirSync(rootDir)\n  fs.mkdirSync(`${rootDir}/src`)\n  fs.mkdirSync(`${rootDir}/assets`)\n  await createBase(rootDir)\n}\n\nasync function createBase(dir: string) {\n  await createIndexFile(dir)\n  await createTsconfig(dir)\n  await createPackageFile(dir)\n  createTSup(dir)\n}\n\nfunction getTemplateDir() {\n  return 'auno-cli'\n}\n","import fs from 'node:fs/promises'\n\nexport async function createIndexFile(dir: string) {\n  const fileContetnt = `// Welcome to auno\nmain()\n\nfunction main() {\n\n}`\n  await fs.writeFile(`${dir}/index.ts`, fileContetnt)\n}\n","/**\n * 创建 tsconfig.json\n */\nimport fs from 'node:fs/promises'\n\nexport async function createTsconfig(rootDir: string) {\n  const content = `{\n    \"compilerOptions\": {\n      \"outDir\": \"dist\",\n      \"target\": \"ESNext\" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,\n      \"module\": \"esnext\" /* Specify what module code is generated. */,\n      \"esModuleInterop\": true,\n      \"moduleResolution\": \"Node\",\n    }\n  }`\n  const res = await fs.writeFile(`${rootDir}/tsconfig.json`, content)\n  console.log(res)\n}\n","import fs from 'node:fs/promises'\nimport { lintCode } from '../utils/lint'\n\nexport async function createPackageFile(rootDir: string) {\n  const content = `\n{\n      \"name\": \"${rootDir}\",\n      \"version\": \"0.0.1\",\n      \"description\": \"\",\n      \"main\": \"dist/index.js\",\n      \"type\": \"module\",\n      \"scripts\": {\n        \"start\": \"nodemon --delay 1000ms dist/index.js\",\n        \"tsup-watch\": \"tsup --format esm --watch\",\n        \"build\": \"tsup --format esm && tsup --dts --format esm\",\n        \"dts\": \"tsup --dts --format esm\",\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"@types/node\": \"^20.11.10\",\n        \"nodemon\": \"^3.0.3\",\n        \"tsup\": \"^8.0.1\",\n        \"typescript\": \"^5.3.3\"\n      }\n}`;\n  const lintCode = JSON.stringify(content.trim(), null, 4)\n  await fs.writeFile(`${rootDir}/package.json`, content.trim())\n}\n","import { writeFileSync } from 'fs'\nexport function createTSup(rootDir: string) {\n  const content = `\nimport { defineConfig } from 'tsup' // 使用 defineConfig 有类型提示！\n\nexport default defineConfig({\n  entry: ['index.ts'],\n  splitting: false,\n  sourcemap: true,\n  clean: true,\n})  \n  `\n  writeFileSync(`${rootDir}/tsup.config.ts`, content.trim())\n  \n}\n"],"mappings":"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","names":["fs","fs","fs","fs"]}